/* tslint:disable */
/* eslint-disable */
/**
 * Janun API
 * REST API for Janun Backend Service by Team QuantumGuys
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Tag
 */
export interface Tag {
    /**
     * 
     * @type {string}
     * @memberof Tag
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof Tag
     */
    description?: string;
    /**
     * 
     * @type {number}
     * @memberof Tag
     */
    postCount?: number;
    /**
     * 
     * @type {number}
     * @memberof Tag
     */
    threadCount?: number;
    /**
     * 
     * @type {number}
     * @memberof Tag
     */
    channelCount?: number;
}

/**
 * Check if a given object implements the Tag interface.
 */
export function instanceOfTag(value: object): value is Tag {
    return true;
}

export function TagFromJSON(json: any): Tag {
    return TagFromJSONTyped(json, false);
}

export function TagFromJSONTyped(json: any, ignoreDiscriminator: boolean): Tag {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'postCount': json['postCount'] == null ? undefined : json['postCount'],
        'threadCount': json['threadCount'] == null ? undefined : json['threadCount'],
        'channelCount': json['channelCount'] == null ? undefined : json['channelCount'],
    };
}

export function TagToJSON(value?: Tag | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'description': value['description'],
        'postCount': value['postCount'],
        'threadCount': value['threadCount'],
        'channelCount': value['channelCount'],
    };
}

