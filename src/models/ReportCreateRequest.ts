/* tslint:disable */
/* eslint-disable */
/**
 * Janun API
 * REST API for Janun Backend Service by Team QuantumGuys
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ReportCreateRequest
 */
export interface ReportCreateRequest {
    /**
     * 
     * @type {string}
     * @memberof ReportCreateRequest
     */
    reason?: string;
    /**
     * Type of the report
     * @type {string}
     * @memberof ReportCreateRequest
     */
    type?: ReportCreateRequestTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof ReportCreateRequest
     */
    channelSlug?: string;
    /**
     * 
     * @type {string}
     * @memberof ReportCreateRequest
     */
    threadSlug?: string;
    /**
     * 
     * @type {string}
     * @memberof ReportCreateRequest
     */
    postSlug?: string;
    /**
     * 
     * @type {number}
     * @memberof ReportCreateRequest
     */
    commentId?: number;
}


/**
 * @export
 */
export const ReportCreateRequestTypeEnum = {
    Post: 'post',
    Comment: 'comment',
    Thread: 'thread'
} as const;
export type ReportCreateRequestTypeEnum = typeof ReportCreateRequestTypeEnum[keyof typeof ReportCreateRequestTypeEnum];


/**
 * Check if a given object implements the ReportCreateRequest interface.
 */
export function instanceOfReportCreateRequest(value: object): value is ReportCreateRequest {
    return true;
}

export function ReportCreateRequestFromJSON(json: any): ReportCreateRequest {
    return ReportCreateRequestFromJSONTyped(json, false);
}

export function ReportCreateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportCreateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'reason': json['reason'] == null ? undefined : json['reason'],
        'type': json['type'] == null ? undefined : json['type'],
        'channelSlug': json['channelSlug'] == null ? undefined : json['channelSlug'],
        'threadSlug': json['threadSlug'] == null ? undefined : json['threadSlug'],
        'postSlug': json['postSlug'] == null ? undefined : json['postSlug'],
        'commentId': json['commentId'] == null ? undefined : json['commentId'],
    };
}

export function ReportCreateRequestToJSON(value?: ReportCreateRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'reason': value['reason'],
        'type': value['type'],
        'channelSlug': value['channelSlug'],
        'threadSlug': value['threadSlug'],
        'postSlug': value['postSlug'],
        'commentId': value['commentId'],
    };
}

