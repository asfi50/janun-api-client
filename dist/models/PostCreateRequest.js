"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Janun API
 * REST API for Janun Backend Service by Team QuantumGuys
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PostCreateRequestStatusEnum = exports.PostCreateRequestTypeEnum = void 0;
exports.instanceOfPostCreateRequest = instanceOfPostCreateRequest;
exports.PostCreateRequestFromJSON = PostCreateRequestFromJSON;
exports.PostCreateRequestFromJSONTyped = PostCreateRequestFromJSONTyped;
exports.PostCreateRequestToJSON = PostCreateRequestToJSON;
const TagMin_1 = require("./TagMin");
const MediaMin_1 = require("./MediaMin");
/**
 * @export
 */
exports.PostCreateRequestTypeEnum = {
    Post: 'post'
};
/**
 * @export
 */
exports.PostCreateRequestStatusEnum = {
    Draft: 'draft',
    Published: 'published'
};
/**
 * Check if a given object implements the PostCreateRequest interface.
 */
function instanceOfPostCreateRequest(value) {
    return true;
}
function PostCreateRequestFromJSON(json) {
    return PostCreateRequestFromJSONTyped(json, false);
}
function PostCreateRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'channelSlug': json['channelSlug'] == null ? undefined : json['channelSlug'],
        'threadSlug': json['threadSlug'] == null ? undefined : json['threadSlug'],
        'title': json['title'] == null ? undefined : json['title'],
        'content': json['content'] == null ? undefined : json['content'],
        'type': json['type'] == null ? undefined : json['type'],
        'status': json['status'] == null ? undefined : json['status'],
        'premium': json['premium'] == null ? undefined : json['premium'],
        'tags': json['tags'] == null ? undefined : (new Set(json['tags'].map(TagMin_1.TagMinFromJSON))),
        'media': json['media'] == null ? undefined : (json['media'].map(MediaMin_1.MediaMinFromJSON)),
    };
}
function PostCreateRequestToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        'channelSlug': value['channelSlug'],
        'threadSlug': value['threadSlug'],
        'title': value['title'],
        'content': value['content'],
        'type': value['type'],
        'status': value['status'],
        'premium': value['premium'],
        'tags': value['tags'] == null ? undefined : (Array.from(value['tags']).map(TagMin_1.TagMinToJSON)),
        'media': value['media'] == null ? undefined : (value['media'].map(MediaMin_1.MediaMinToJSON)),
    };
}
