"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Janun API
 * REST API for Janun Backend Service by Team QuantumGuys
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfReport = instanceOfReport;
exports.ReportFromJSON = ReportFromJSON;
exports.ReportFromJSONTyped = ReportFromJSONTyped;
exports.ReportToJSON = ReportToJSON;
const Comment_1 = require("./Comment");
const PostMin_1 = require("./PostMin");
const UserMin_1 = require("./UserMin");
const ThreadMin_1 = require("./ThreadMin");
/**
 * Check if a given object implements the Report interface.
 */
function instanceOfReport(value) {
    return true;
}
function ReportFromJSON(json) {
    return ReportFromJSONTyped(json, false);
}
function ReportFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'] == null ? undefined : json['id'],
        'reason': json['reason'] == null ? undefined : json['reason'],
        'status': json['status'] == null ? undefined : json['status'],
        'user': json['user'] == null ? undefined : (0, UserMin_1.UserMinFromJSON)(json['user']),
        'post': json['post'] == null ? undefined : (0, PostMin_1.PostMinFromJSON)(json['post']),
        'comment': json['comment'] == null ? undefined : (0, Comment_1.CommentFromJSON)(json['comment']),
        'thread': json['thread'] == null ? undefined : (0, ThreadMin_1.ThreadMinFromJSON)(json['thread']),
    };
}
function ReportToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'reason': value['reason'],
        'status': value['status'],
        'user': (0, UserMin_1.UserMinToJSON)(value['user']),
        'post': (0, PostMin_1.PostMinToJSON)(value['post']),
        'comment': (0, Comment_1.CommentToJSON)(value['comment']),
        'thread': (0, ThreadMin_1.ThreadMinToJSON)(value['thread']),
    };
}
