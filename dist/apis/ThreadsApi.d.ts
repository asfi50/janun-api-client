/**
 * Janun API
 * REST API for Janun Backend Service by Team QuantumGuys
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { GeneralResponse, PostsPage, Thread, ThreadCreateRequest, ThreadsPage } from '../models/index';
export interface CreateThreadRequest {
    channelSlug: string;
    threadCreateRequest: ThreadCreateRequest;
}
export interface DeleteThreadRequest {
    channelSlug: string;
    threadSlug: string;
}
export interface GetPostsInThreadRequest {
    channelSlug: string;
    threadSlug: string;
    search?: string;
    sort?: string;
    order?: string;
    page?: number;
}
export interface GetThreadRequest {
    channelSlug: string;
    threadSlug: string;
}
export interface GetThreadsRequest {
    channelSlug: string;
    search?: string;
    sort?: string;
    order?: string;
    page?: number;
    size?: number;
}
export interface SubscribeThreadRequest {
    channelSlug: string;
    threadSlug: string;
}
export interface UnsubscribeThreadRequest {
    channelSlug: string;
    threadSlug: string;
}
export interface UpdateThreadRequest {
    channelSlug: string;
    threadSlug: string;
    threadCreateRequest: ThreadCreateRequest;
}
/**
 *
 */
export declare class ThreadsApi extends runtime.BaseAPI {
    /**
     * Create a thread
     * Create Thread
     */
    createThreadRaw(requestParameters: CreateThreadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Thread>>;
    /**
     * Create a thread
     * Create Thread
     */
    createThread(requestParameters: CreateThreadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Thread>;
    /**
     * Delete a thread
     * Delete Thread
     */
    deleteThreadRaw(requestParameters: DeleteThreadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GeneralResponse>>;
    /**
     * Delete a thread
     * Delete Thread
     */
    deleteThread(requestParameters: DeleteThreadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GeneralResponse>;
    /**
     * Get all posts in a channel
     * Get Posts
     */
    getPostsInThreadRaw(requestParameters: GetPostsInThreadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PostsPage>>;
    /**
     * Get all posts in a channel
     * Get Posts
     */
    getPostsInThread(requestParameters: GetPostsInThreadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PostsPage>;
    /**
     * Get a thread
     * Get Thread
     */
    getThreadRaw(requestParameters: GetThreadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Thread>>;
    /**
     * Get a thread
     * Get Thread
     */
    getThread(requestParameters: GetThreadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Thread>;
    /**
     * Get all threads in a channel
     * Get Threads
     */
    getThreadsRaw(requestParameters: GetThreadsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ThreadsPage>>;
    /**
     * Get all threads in a channel
     * Get Threads
     */
    getThreads(requestParameters: GetThreadsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ThreadsPage>;
    /**
     * Subscribe to a thread
     * Subscribe to Thread
     */
    subscribeThreadRaw(requestParameters: SubscribeThreadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Thread>>;
    /**
     * Subscribe to a thread
     * Subscribe to Thread
     */
    subscribeThread(requestParameters: SubscribeThreadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Thread>;
    /**
     * Unsubscribe from a thread
     * Unsubscribe from Thread
     */
    unsubscribeThreadRaw(requestParameters: UnsubscribeThreadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Thread>>;
    /**
     * Unsubscribe from a thread
     * Unsubscribe from Thread
     */
    unsubscribeThread(requestParameters: UnsubscribeThreadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Thread>;
    /**
     * Update a thread
     * Update Thread
     */
    updateThreadRaw(requestParameters: UpdateThreadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Thread>>;
    /**
     * Update a thread
     * Update Thread
     */
    updateThread(requestParameters: UpdateThreadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Thread>;
}
